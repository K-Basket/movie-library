{"version":3,"file":"static/js/797.a5b79802.chunk.js","mappings":"oPAkBaA,EAAQC,EAAAA,GAAAA,GAAH,0XAKPC,EAAAA,GAGEC,EAAAA,GAGFC,EAAAA,GAAAA,OAMAA,EAAAA,GAAAA,SAOEC,EAAUJ,EAAAA,GAAAA,GAAH,uSACTG,EAAAA,GAAAA,OAjCc,GACC,GA0CfA,EAAAA,GAAAA,QAvCe,GACC,IA6CdE,EAAOL,EAAAA,GAAAA,GAAH,6YAGNG,EAAAA,GAAAA,OAnDiB,EADF,GADD,GACC,GAyDFG,EAAAA,GAQbH,EAAAA,GAAAA,QA5DkB,EADF,GADD,GACC,IAoEdI,EAAOP,EAAAA,GAAAA,QAAH,wJAKDQ,EAAAA,IAKHC,EAAYT,EAAAA,GAAAA,IAAH,sNAOXG,EAAAA,GAAAA,OAMAA,EAAAA,GAAAA,SAOEO,EAAcV,EAAAA,GAAAA,IAAH,0kBAYXC,EAAAA,GAEAE,EAAAA,GAAAA,QAYAD,EAAAA,GAEAC,EAAAA,GAAAA,SAQAQ,GAAiBX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAH,gH,uCCpIda,EAAe,SAAC,GAOtB,IANLC,EAMI,EANJA,WACAC,EAKI,EALJA,UACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,MACAC,EACI,EADJA,MAEMC,GAAWC,EAAAA,EAAAA,MACHC,GAAeC,EAAAA,EAAAA,MAArBC,KACAC,GAAwBC,EAAAA,EAAAA,KAAxBD,oBAEFE,GAAUC,EAAAA,EAAAA,UAehB,OAAIb,IAAcC,GACT,eAAIa,MAAO,CAAEC,SAAU,OAAQC,MAAO,UAAtC,4BAGP,iCACE,UAAChC,EAAD,WACGmB,EAAM,IACP,qCAAWA,EAAM,UAEnB,SAACd,EAAD,UACGU,GACCA,EAAWkB,KACT,YAA0D,IAAvDC,EAAsD,EAAtDA,GAAIC,EAAkD,EAAlDA,YAAahB,EAAqC,EAArCA,MAAOiB,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACjCC,EAAM,gDACVH,QADU,IACVA,EAAAA,EA3CO,oCA6CT,EAAsBC,EAAaG,MAAM,KAAlCC,GAAP,eACMC,GAAQC,EAAAA,EAAAA,GAA0BnB,EAAYc,GAEpD,OACE,SAAC/B,EAAD,CAAeqC,IAAKf,EAApB,UACE,SAAC,KAAD,CAAMgB,GAAE,UAAKxB,GAAL,OAAac,GAAMW,MAAO,CAAEC,KAAMzB,GAA1C,UAEE,UAACb,EAAD,YACE,SAACE,EAAD,WACE,gBAAKqC,IAAKT,EAAQU,IAAK7B,OAGzB,UAACR,EAAD,YACE,wBAAKQ,KACL,iCAAOsB,EAAP,cAAkBD,cAVfN,EAgBd,MAINR,IACC,SAACd,EAAD,CAAgBqC,SAAS,EAAMC,QAtDlB,WACjBhC,GAAQ,SAAAiC,GAAI,OAAIA,EAAO,CAAX,IAEZC,YAAW,WACT,IAAgBC,EAAezB,EAAQ0B,QAAQC,wBAAvCC,OAERC,OAAOC,SAAS,CACdC,IAAkB,IAAbN,EACLO,SAAU,UAEb,GAAE,IACJ,EA2CK,yBAMP,C,+DClED,UApBmB,WACjB,OAAyCjC,EAAAA,EAAAA,KAAjCkC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,YAEzB,OACE,iCACE,SAAC,IAAD,CACE3C,MAAO,CAAC,SAAD,eACPJ,WAAY8C,EACZzC,MAAM,cAGR,SAAC,IAAD,CACED,MAAO,CAAC,SAAD,YACPJ,WAAY+C,EACZ1C,MAAM,eAIb,C","sources":["components/MovieGallery.styled.js","components/MovieGallery.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  blackColor,\n  device,\n  redColor,\n  shadow,\n  transition,\n} from 'utils/variables.styled';\nimport { Button } from './Header.styled';\n\nconst gapGridTopTablet = 23;\nconst gapGridLeftTablet = 18;\nconst numberOfCardsTablet = 3;\n\nconst gapGridTopDesktop = 30;\nconst gapGridLeftDesktop = 20;\nconst numberOfCardsDesktop = 4;\n\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n  font-size: 17px;\n  line-height: calc(19 / 17);\n  font-weight: 500;\n  color: ${blackColor};\n\n  & span {\n    color: ${redColor};\n  }\n\n  @media ${device.tablet} {\n    margin-bottom: 12px;\n    font-size: 21px;\n    line-height: calc(24 / 21);\n  }\n\n  @media ${device.desktop} {\n    margin-bottom: 15px;\n    font-size: 26px;\n    line-height: calc(30 / 26);\n  }\n`;\n\nexport const CardSet = styled.ul`\n  @media ${device.tablet} {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n\n    margin-top: -${gapGridTopTablet}px;\n    margin-left: -${gapGridLeftTablet}px;\n    margin-bottom: 35px;\n  }\n\n  @media ${device.desktop} {\n    margin-top: -${gapGridTopDesktop}px;\n    margin-left: -${gapGridLeftDesktop}px;\n    margin-bottom: 50px;\n  }\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 30px;\n\n  @media ${device.tablet} {\n    flex-basis: calc(100% / ${numberOfCardsTablet} - ${gapGridLeftTablet}px);\n    margin-top: ${gapGridTopTablet}px;\n    margin-left: ${gapGridLeftTablet}px;\n    margin-bottom: 0px;\n    transition: scale ${transition};\n    cursor: pointer;\n\n    &:hover {\n      scale: 1.007;\n    }\n  }\n\n  @media ${device.desktop} {\n    flex-basis: calc(100% / ${numberOfCardsDesktop} - ${gapGridLeftDesktop}px);\n    margin-top: ${gapGridTopDesktop}px;\n    margin-left: ${gapGridLeftDesktop}px;\n  }\n`;\n\nexport const Card = styled.article`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  box-shadow: ${shadow};\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const CardThumb = styled.div`\n  position: relative;\n\n  & img {\n    height: 660px;\n  }\n\n  @media ${device.tablet} {\n    & img {\n      height: 346px;\n    }\n  }\n\n  @media ${device.desktop} {\n    & img {\n      height: 445px;\n    }\n  }\n`;\n\nexport const CardContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-grow: 1;\n  padding: 10px;\n\n  & h2 {\n    font-size: 12px;\n    font-weight: 500;\n    text-transform: uppercase;\n\n    color: ${blackColor};\n\n    @media ${device.desktop} {\n      font-size: 16px;\n      font-weight: 500;\n      line-height: calc(19 / 16);\n    }\n  }\n\n  & p {\n    font-size: 12px;\n    font-weight: 500;\n    line-height: calc(16 / 12);\n\n    color: ${redColor};\n\n    @media ${device.desktop} {\n      font-size: 16px;\n      font-weight: 500;\n      line-height: calc(19 / 16);\n    }\n  }\n`;\n\nexport const ButtonLoadMore = styled(Button)`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 30px;\n`;\n","import { useRef } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  ButtonLoadMore,\n  Card,\n  CardContent,\n  CardSet,\n  CardThumb,\n  Item,\n  Title,\n} from './MovieGallery.styled';\nimport { useGetGenresListQuery } from 'redux/moviesSlice';\nimport { useMoviesContext } from 'redux/Context';\nimport { createGenresForTrendMovie } from 'helpers/helpers';\n\nconst imgPlaceholder = '/dykOcAqI01Fci5cKQW3bEUrPWwU.jpg';\n\nexport const MovieGallery = ({\n  dataMovies,\n  isLoading,\n  error,\n  setPage,\n  title,\n  route,\n}) => {\n  const location = useLocation();\n  const { data: genresList } = useGetGenresListQuery();\n  const { isActiveBtnLoadMore } = useMoviesContext();\n\n  const refItem = useRef();\n\n  const addNewPage = () => {\n    setPage(prev => prev + 1);\n\n    setTimeout(() => {\n      const { height: itemHeight } = refItem.current.getBoundingClientRect();\n\n      window.scrollBy({\n        top: itemHeight * 1.2,\n        behavior: 'smooth',\n      });\n    }, 250);\n  };\n\n  if (isLoading && !error)\n    return <h1 style={{ fontSize: '30px', color: 'salmon' }}>...loading...</h1>;\n\n  return (\n    <>\n      <Title>\n        {title[0]}\n        <span>{` ${title[1]}`}</span>\n      </Title>\n      <CardSet>\n        {dataMovies &&\n          dataMovies.map(\n            ({ id, poster_path, title, release_date, genre_ids }) => {\n              const poster = `https://image.tmdb.org/t/p/w500${\n                poster_path ?? imgPlaceholder\n              }`;\n              const [yearRelease] = release_date.split('-');\n              const genre = createGenresForTrendMovie(genresList, genre_ids);\n\n              return (\n                <Item key={id} ref={refItem}>\n                  <Link to={`${route}${id}`} state={{ from: location }}>\n                    {/* <Link to={`${route}${id}`}> */}\n                    <Card>\n                      <CardThumb>\n                        <img src={poster} alt={title} />\n                      </CardThumb>\n\n                      <CardContent>\n                        <h2>{title}</h2>\n                        <p>{`${genre} | ${yearRelease}`}</p>\n                      </CardContent>\n                    </Card>\n                  </Link>\n                </Item>\n              );\n            }\n          )}\n      </CardSet>\n\n      {isActiveBtnLoadMore && (\n        <ButtonLoadMore $active={true} onClick={addNewPage}>\n          load more\n        </ButtonLoadMore>\n      )}\n    </>\n  );\n};\n","// import { Link, useLocation } from 'react-router-dom';\n\nimport { MovieGallery } from 'components/MovieGallery';\nimport { useMoviesContext } from 'redux/Context';\n\nconst MoviesPage = () => {\n  const { moviesFavorites, moviesQueue } = useMoviesContext();\n\n  return (\n    <>\n      <MovieGallery\n        title={[`Movies`, `My Favorite`]}\n        dataMovies={moviesFavorites}\n        route=\"/movies/\"\n      />\n\n      <MovieGallery\n        title={[`Movies`, `My Queue`]}\n        dataMovies={moviesQueue}\n        route=\"/movies/\"\n      />\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["Title","styled","blackColor","redColor","device","CardSet","Item","transition","Card","shadow","CardThumb","CardContent","ButtonLoadMore","Button","MovieGallery","dataMovies","isLoading","error","setPage","title","route","location","useLocation","genresList","useGetGenresListQuery","data","isActiveBtnLoadMore","useMoviesContext","refItem","useRef","style","fontSize","color","map","id","poster_path","release_date","genre_ids","poster","split","yearRelease","genre","createGenresForTrendMovie","ref","to","state","from","src","alt","$active","onClick","prev","setTimeout","itemHeight","current","getBoundingClientRect","height","window","scrollBy","top","behavior","moviesFavorites","moviesQueue"],"sourceRoot":""}