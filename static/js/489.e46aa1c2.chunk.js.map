{"version":3,"file":"static/js/489.e46aa1c2.chunk.js","mappings":"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","sources":["components/MovieGallery.styled.js","components/MovieGallery.jsx","components/BtnGoTo.styled.js","components/BtnGoTo.jsx","pages/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  blackColor,\n  device,\n  redColor,\n  shadow,\n  transition,\n} from 'utils/variables.styled';\nimport { Button } from './Header.styled';\n\nconst gapGridTopTablet = 23;\nconst gapGridLeftTablet = 18;\nconst numberOfCardsTablet = 3;\n\nconst gapGridTopDesktop = 30;\nconst gapGridLeftDesktop = 20;\nconst numberOfCardsDesktop = 4;\n\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n  font-size: 17px;\n  line-height: calc(19 / 17);\n  font-weight: 500;\n  color: ${blackColor};\n\n  & span {\n    color: ${redColor};\n  }\n\n  @media ${device.tablet} {\n    margin-bottom: 12px;\n    font-size: 21px;\n    line-height: calc(24 / 21);\n  }\n\n  @media ${device.desktop} {\n    margin-bottom: 15px;\n    font-size: 26px;\n    line-height: calc(30 / 26);\n  }\n`;\n\nexport const CardSet = styled.ul`\n  @media ${device.tablet} {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n\n    margin-top: -${gapGridTopTablet}px;\n    margin-left: -${gapGridLeftTablet}px;\n    margin-bottom: 35px;\n  }\n\n  @media ${device.desktop} {\n    margin-top: -${gapGridTopDesktop}px;\n    margin-left: -${gapGridLeftDesktop}px;\n    margin-bottom: 50px;\n  }\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 30px;\n\n  @media ${device.tablet} {\n    flex-basis: calc(100% / ${numberOfCardsTablet} - ${gapGridLeftTablet}px);\n    margin-top: ${gapGridTopTablet}px;\n    margin-left: ${gapGridLeftTablet}px;\n    margin-bottom: 0px;\n    transition: scale ${transition};\n    cursor: pointer;\n\n    &:hover {\n      scale: 1.007;\n    }\n  }\n\n  @media ${device.desktop} {\n    flex-basis: calc(100% / ${numberOfCardsDesktop} - ${gapGridLeftDesktop}px);\n    margin-top: ${gapGridTopDesktop}px;\n    margin-left: ${gapGridLeftDesktop}px;\n  }\n`;\n\nexport const Card = styled.article`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  box-shadow: ${shadow};\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const CardThumb = styled.div`\n  position: relative;\n\n  & img {\n    height: 660px;\n  }\n\n  @media ${device.tablet} {\n    & img {\n      height: 346px;\n    }\n  }\n\n  @media ${device.desktop} {\n    & img {\n      height: 445px;\n    }\n  }\n`;\n\nexport const CardContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-grow: 1;\n  padding: 10px;\n\n  & h2 {\n    font-size: 12px;\n    font-weight: 500;\n    text-transform: uppercase;\n\n    color: ${blackColor};\n\n    @media ${device.desktop} {\n      font-size: 16px;\n      font-weight: 500;\n      line-height: calc(19 / 16);\n    }\n  }\n\n  & p {\n    font-size: 12px;\n    font-weight: 500;\n    line-height: calc(16 / 12);\n\n    color: ${redColor};\n\n    @media ${device.desktop} {\n      font-size: 16px;\n      font-weight: 500;\n      line-height: calc(19 / 16);\n    }\n  }\n`;\n\nexport const ButtonLoadMore = styled(Button)`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 30px;\n`;\n","import { useRef } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  ButtonLoadMore,\n  Card,\n  CardContent,\n  CardSet,\n  CardThumb,\n  Item,\n  Title,\n} from './MovieGallery.styled';\nimport { useGetGenresListQuery } from 'redux/moviesSlice';\n\nconst imgPlaceholder = '/dykOcAqI01Fci5cKQW3bEUrPWwU.jpg';\n\nexport const MovieGallery = ({\n  dataMovies,\n  isLoading,\n  error,\n  setPage,\n  title,\n  createGenres,\n  route,\n}) => {\n  const location = useLocation();\n  const { data: genresList } = useGetGenresListQuery();\n\n  const refItem = useRef();\n\n  const addNewPage = () => {\n    setPage(prev => prev + 1);\n\n    setTimeout(() => {\n      const { height: itemHeight } = refItem.current.getBoundingClientRect();\n\n      window.scrollBy({\n        top: itemHeight * 1.2,\n        behavior: 'smooth',\n      });\n    }, 250);\n  };\n\n  if (isLoading && !error)\n    return <h1 style={{ fontSize: '30px', color: 'salmon' }}>...loading...</h1>;\n\n  return (\n    <>\n      <Title>\n        {title[0]}\n        <span>{` ${title[1]}`}</span>\n      </Title>\n      <CardSet>\n        {dataMovies &&\n          dataMovies.map(\n            ({ id, poster_path, title, release_date, genre_ids }) => {\n              const poster = `https://image.tmdb.org/t/p/w500${\n                poster_path ?? imgPlaceholder\n              }`;\n              const [yearRelease] = release_date.split('-');\n              const genre = createGenres(genresList, genre_ids);\n\n              return (\n                <Item key={id} ref={refItem}>\n                  <Link to={`${route}${id}`} state={{ from: location }}>\n                    {/* <Link to={`${route}${id}`}> */}\n                    <Card>\n                      <CardThumb>\n                        <img src={poster} alt={title} />\n                      </CardThumb>\n\n                      <CardContent>\n                        <h2>{title}</h2>\n                        <p>{`${genre} | ${yearRelease}`}</p>\n                      </CardContent>\n                    </Card>\n                  </Link>\n                </Item>\n              );\n            }\n          )}\n      </CardSet>\n\n      <ButtonLoadMore $active={true} onClick={addNewPage}>\n        load more\n      </ButtonLoadMore>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { redColor, whiteColor } from 'utils/variables.styled';\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: fixed;\n  bottom: 3%;\n  right: 2%;\n\n  padding: 10px;\n  border: none;\n  border-radius: 100%;\n  fill: ${whiteColor};\n  background-color: ${redColor};\n`;\n","import sprite from 'images/sprite.svg';\nimport { Button } from './BtnGoTo.styled';\n\nexport const BtnGoTo = () => {\n  const goToTop = () => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <Button onClick={goToTop}>\n      <svg width=\"20px\" height=\"20px\">\n        <use href={`${sprite}#icon-arrow-up2`}></use>\n      </svg>\n    </Button>\n  );\n};\n","import { MovieGallery } from 'components/MovieGallery';\nimport { createGenresForTrendMovie } from 'helpers/helpers';\nimport { useMoviesContext } from 'redux/Context';\nimport { BtnGoTo } from 'components/BtnGoTo';\nimport { useEffect, useRef, useState } from 'react';\n\nconst HomePage = () => {\n  const {\n    isActiveBtn,\n    moviesTrendWeek,\n    moviesTrendDay,\n    setPageWeek,\n    isLoadingTrendWeek,\n    errorTrendWeek,\n    setPageDay,\n    isLoadingTrendDay,\n    errorTrendDay,\n  } = useMoviesContext();\n  const refGallery = useRef();\n  const [topPosition, setTopPosition] = useState();\n\n  useEffect(() => {\n    const updatePosition = () => {\n      const { top } = refGallery.current.getBoundingClientRect();\n      setTopPosition(top);\n    };\n\n    window.addEventListener('scroll', updatePosition);\n    return () => window.removeEventListener('scroll', updatePosition);\n  }, []);\n\n  return (\n    <div ref={refGallery}>\n      {true && (\n        <MovieGallery\n          title=\"Search result for your Query\"\n          dataMovies={moviesTrendDay}\n          isLoading={isLoadingTrendDay}\n          error={errorTrendDay}\n          setPage={setPageDay}\n          createGenres={createGenresForTrendMovie}\n          route=\"movies/\"\n        />\n      )}\n\n      {isActiveBtn && (\n        <MovieGallery\n          title=\"Popular films of the Week\"\n          dataMovies={moviesTrendWeek}\n          isLoading={isLoadingTrendWeek}\n          error={errorTrendWeek}\n          setPage={setPageWeek}\n          createGenres={createGenresForTrendMovie}\n          route=\"movies/\"\n        />\n      )}\n      {!isActiveBtn && (\n        <MovieGallery\n          title=\"Popular films of the Day\"\n          dataMovies={moviesTrendDay}\n          isLoading={isLoadingTrendDay}\n          error={errorTrendDay}\n          setPage={setPageDay}\n          createGenres={createGenresForTrendMovie}\n          route=\"movies/\"\n        />\n      )}\n\n      {topPosition < 0 && <BtnGoTo />}\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["Title","styled","blackColor","redColor","device","CardSet","Item","transition","Card","shadow","CardThumb","CardContent","ButtonLoadMore","Button","MovieGallery","dataMovies","isLoading","error","setPage","title","createGenres","route","location","useLocation","genresList","useGetGenresListQuery","data","refItem","useRef","style","fontSize","color","map","id","poster_path","release_date","genre_ids","poster","split","yearRelease","genre","ref","to","state","from","src","alt","$active","onClick","prev","setTimeout","itemHeight","current","getBoundingClientRect","height","window","scrollBy","top","behavior","whiteColor","BtnGoTo","scrollTo","left","width","href","sprite","useMoviesContext","isActiveBtn","moviesTrendWeek","moviesTrendDay","setPageWeek","isLoadingTrendWeek","errorTrendWeek","setPageDay","isLoadingTrendDay","errorTrendDay","refGallery","useState","topPosition","setTopPosition","useEffect","updatePosition","addEventListener","removeEventListener","createGenresForTrendMovie"],"sourceRoot":""}