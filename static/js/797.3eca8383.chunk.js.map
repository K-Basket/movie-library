{"version":3,"file":"static/js/797.3eca8383.chunk.js","mappings":"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","sources":["components/BtnGoTo.styled.js","components/BtnGoTo.jsx","components/MovieGallery.styled.js","components/MovieGallery.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { redColor, whiteColor } from 'utils/variables.styled';\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: fixed;\n  bottom: 3%;\n  right: 2%;\n\n  padding: 10px;\n  border: none;\n  border-radius: 100%;\n  fill: ${whiteColor};\n  background-color: ${redColor};\n`;\n","import sprite from 'images/sprite.svg';\nimport { Button } from './BtnGoTo.styled';\n\nexport const BtnGoTo = () => {\n  const goToTop = () => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <Button onClick={goToTop}>\n      <svg width=\"20px\" height=\"20px\">\n        <use href={`${sprite}#icon-arrow-up2`}></use>\n      </svg>\n    </Button>\n  );\n};\n","import styled from 'styled-components';\nimport {\n  blackColor,\n  device,\n  redColor,\n  shadow,\n  transition,\n} from 'utils/variables.styled';\nimport { Button } from './Header.styled';\n\nconst gapGridTopTablet = 23;\nconst gapGridLeftTablet = 18;\nconst numberOfCardsTablet = 3;\n\nconst gapGridTopDesktop = 30;\nconst gapGridLeftDesktop = 20;\nconst numberOfCardsDesktop = 4;\n\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n  font-size: 17px;\n  line-height: calc(19 / 17);\n  font-weight: 500;\n  color: ${blackColor};\n\n  & span {\n    color: ${redColor};\n  }\n\n  @media ${device.tablet} {\n    margin-bottom: 12px;\n    font-size: 21px;\n    line-height: calc(24 / 21);\n  }\n\n  @media ${device.desktop} {\n    margin-bottom: 15px;\n    font-size: 26px;\n    line-height: calc(30 / 26);\n  }\n`;\n\nexport const CardSet = styled.ul`\n  @media ${device.tablet} {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n\n    margin-top: -${gapGridTopTablet}px;\n    margin-left: -${gapGridLeftTablet}px;\n    margin-bottom: 35px;\n  }\n\n  @media ${device.desktop} {\n    margin-top: -${gapGridTopDesktop}px;\n    margin-left: -${gapGridLeftDesktop}px;\n    margin-bottom: 50px;\n  }\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 30px;\n\n  @media ${device.tablet} {\n    flex-basis: calc(100% / ${numberOfCardsTablet} - ${gapGridLeftTablet}px);\n    margin-top: ${gapGridTopTablet}px;\n    margin-left: ${gapGridLeftTablet}px;\n    margin-bottom: 0px;\n    transition: scale ${transition};\n    cursor: pointer;\n\n    &:hover {\n      scale: 1.007;\n    }\n  }\n\n  @media ${device.desktop} {\n    flex-basis: calc(100% / ${numberOfCardsDesktop} - ${gapGridLeftDesktop}px);\n    margin-top: ${gapGridTopDesktop}px;\n    margin-left: ${gapGridLeftDesktop}px;\n  }\n`;\n\nexport const Card = styled.article`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  box-shadow: ${shadow};\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const CardThumb = styled.div`\n  position: relative;\n\n  & img {\n    height: 660px;\n  }\n\n  @media ${device.tablet} {\n    & img {\n      height: 346px;\n    }\n  }\n\n  @media ${device.desktop} {\n    & img {\n      height: 445px;\n    }\n  }\n`;\n\nexport const CardContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-grow: 1;\n  padding: 10px;\n\n  & h2 {\n    font-size: 12px;\n    font-weight: 500;\n    text-transform: uppercase;\n\n    color: ${blackColor};\n\n    @media ${device.desktop} {\n      font-size: 16px;\n      font-weight: 500;\n      line-height: calc(19 / 16);\n    }\n  }\n\n  & p {\n    font-size: 12px;\n    font-weight: 500;\n    line-height: calc(16 / 12);\n\n    color: ${redColor};\n\n    @media ${device.desktop} {\n      font-size: 16px;\n      font-weight: 500;\n      line-height: calc(19 / 16);\n    }\n  }\n`;\n\nexport const ButtonLoadMore = styled(Button)`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 30px;\n`;\n","import { useEffect, useRef } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  ButtonLoadMore,\n  Card,\n  CardContent,\n  CardSet,\n  CardThumb,\n  Item,\n  Title,\n} from './MovieGallery.styled';\nimport { useGetGenresListQuery } from 'redux/moviesSlice';\nimport { createGenresForTrendMovie } from 'helpers/helpers';\nimport { useMoviesContext } from 'redux/Context';\n\nconst imgPlaceholder = '/dykOcAqI01Fci5cKQW3bEUrPWwU.jpg';\n\nexport const MovieGallery = ({\n  dataMovies,\n  isLoading,\n  error,\n  setPage,\n  title,\n  route,\n}) => {\n  const location = useLocation();\n  const { data: genresList } = useGetGenresListQuery();\n  const { isActiveBtn, setIsActiveBtn } = useMoviesContext();\n  const { data, total } = dataMovies;\n  const refItem = useRef();\n\n  useEffect(() => {\n    if (data.length < total && data.length) return setIsActiveBtn(true);\n    setIsActiveBtn(false);\n  }, [total, data, setIsActiveBtn]);\n\n  const addNewPage = () => {\n    setPage(prev => prev + 1);\n\n    setTimeout(() => {\n      const { height: itemHeight } = refItem.current.getBoundingClientRect();\n\n      window.scrollBy({\n        top: itemHeight * 1.2,\n        behavior: 'smooth',\n      });\n    }, 250);\n  };\n\n  if (isLoading && !error)\n    return <h1 style={{ fontSize: '30px', color: 'salmon' }}>...loading...</h1>;\n\n  return (\n    <>\n      <Title>\n        {title[0]}\n        <span>{` ${title[1]}`}</span>\n      </Title>\n      <CardSet>\n        {data.map(({ id, poster_path, title, release_date, genre_ids }) => {\n          const poster = `https://image.tmdb.org/t/p/w500${\n            poster_path ?? imgPlaceholder\n          }`;\n          const [yearRelease] = release_date.split('-');\n          const genre = createGenresForTrendMovie(genresList, genre_ids);\n\n          return (\n            <Item key={id} ref={refItem}>\n              <Link to={`${route}${id}`} state={{ from: location }}>\n                {/* <Link to={`${route}${id}`}> */}\n                <Card>\n                  <CardThumb>\n                    <img src={poster} alt={title} />\n                  </CardThumb>\n\n                  <CardContent>\n                    <h2>{title}</h2>\n                    <p>{`${genre} | ${yearRelease}`}</p>\n                  </CardContent>\n                </Card>\n              </Link>\n            </Item>\n          );\n        })}\n      </CardSet>\n\n      {isActiveBtn && (\n        <ButtonLoadMore $active={true} onClick={addNewPage}>\n          load more\n        </ButtonLoadMore>\n      )}\n    </>\n  );\n};\n","import { useEffect, useRef, useState } from 'react';\nimport { MovieGallery } from 'components/MovieGallery';\nimport { useMoviesContext } from 'redux/Context';\nimport { BtnGoTo } from 'components/BtnGoTo';\n\nconst MoviesPage = () => {\n  const refGallery = useRef();\n  const [topPosition, setTopPosition] = useState();\n  const { moviesFavorites, moviesQueue, activeMovGallery } = useMoviesContext();\n\n  useEffect(() => {\n    const updatePosition = () => {\n      const { top } = refGallery.current.getBoundingClientRect();\n      setTopPosition(top);\n    };\n\n    window.addEventListener('scroll', updatePosition);\n    return () => window.removeEventListener('scroll', updatePosition);\n  }, []);\n\n  return (\n    <div ref={refGallery}>\n      {activeMovGallery === 'favorite' && (\n        <MovieGallery\n          title={[`Movies`, `My Favorite`]}\n          dataMovies={moviesFavorites}\n          route=\"/movies/\"\n        />\n      )}\n\n      {activeMovGallery === 'queue' && (\n        <MovieGallery\n          title={[`Movies`, `My Queue`]}\n          dataMovies={moviesQueue}\n          route=\"/movies/\"\n        />\n      )}\n\n      {topPosition < 0 && <BtnGoTo />}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["Button","styled","whiteColor","redColor","BtnGoTo","onClick","window","scrollTo","top","left","behavior","width","height","href","sprite","Title","blackColor","device","CardSet","Item","transition","Card","shadow","CardThumb","CardContent","ButtonLoadMore","MovieGallery","dataMovies","isLoading","error","setPage","title","route","location","useLocation","genresList","useGetGenresListQuery","data","useMoviesContext","isActiveBtn","setIsActiveBtn","total","refItem","useRef","useEffect","length","style","fontSize","color","map","id","poster_path","release_date","genre_ids","poster","split","yearRelease","genre","createGenresForTrendMovie","ref","to","state","from","src","alt","$active","prev","setTimeout","itemHeight","current","getBoundingClientRect","scrollBy","refGallery","useState","topPosition","setTopPosition","moviesFavorites","moviesQueue","activeMovGallery","updatePosition","addEventListener","removeEventListener"],"sourceRoot":""}